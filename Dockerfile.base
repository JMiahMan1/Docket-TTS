# Stage 1: The Base Builder
# Use a standard Fedora image as a build environment and name this stage "base".
FROM fedora:42 AS base

# Install all specified system dependencies, build tools, and Fedora-provided Python packages into the /install_root directory.
RUN dnf install -y dnf-plugins-core && \
    dnf install -y --use-host-config --installroot=/install_root --releasever=42 \
        python3 python3-pip python3-virtualenv \
        poppler-utils \
        ffmpeg \
        espeak-ng \
        python3-requests \
        python3-onnxruntime \
        python3-sentencepiece \
        python3-flask \
        python3-celery \
        python3-redis \
        python3-docx \
        python3-ebooklib \
        python3-PyMuPDF \
        python3-beautifulsoup4 \
        python3-inflect \
        python3-mutagen \
        python3-pillow \
        wget \
        gcc \
        gcc-c++ \
        cmake \
        make libffi-devel bzip2-devel zlib-devel xz-devel \
        git curl unzip which && \
    dnf clean all -y --installroot=/install_root

# Remove the dangling symlink and create a new, valid resolv.conf for network access.
# Then, create the venv and install pip packages inside /install_root.
RUN rm -f /install_root/etc/resolv.conf && \
    echo "nameserver 8.8.8.8" > /install_root/etc/resolv.conf && \
    chroot /install_root python3 -m venv --system-site-packages /opt/venv && \
    chroot /install_root /opt/venv/bin/pip install --upgrade pip && \
    chroot /install_root /opt/venv/bin/pip install --no-cache-dir \
        torch torchaudio --index-url https://download.pytorch.org/whl/cpu && \
    chroot /install_root /opt/venv/bin/pip install --no-cache-dir \
        argostranslate piper-tts

# --- ADD THIS STEP ---
# Create the voices directory inside the install root and download the models.
RUN mkdir -p /install_root/app/voices && \
    cd /install_root/app/voices && \
    wget -q https://huggingface.co/rhasspy/piper-voices/resolve/main/en/en_US/hfc_male/medium/en_US-hfc_male-medium.onnx && \
    wget -q https://huggingface.co/rhasspy/piper-voices/resolve/main/en/en_US/hfc_male/medium/en_US-hfc_male-medium.onnx.json && \
    wget -q https://huggingface.co/rhasspy/piper-voices/resolve/main/en/en_US/libritts_r/medium/en_US-libritts_r-medium.onnx && \
    wget -q https://huggingface.co/rhasspy/piper-voices/resolve/main/en/en_US/libritts_r/medium/en_US-libritts_r-medium.onnx.json

# ---

# Stage 2: The Final, Minimal Image
# Start from a completely empty image for security and size.
FROM scratch

# Copy the entire populated filesystem from the "base" stage defined above.
COPY --from=base /install_root/ /

# Set the environment and working directory for any subsequent images that use this base.
ENV PATH="/opt/venv/bin:$PATH"
WORKDIR /app

# Set a default command for easier debugging.
CMD ["/bin/bash"]
