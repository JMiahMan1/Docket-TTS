name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set repository name to lowercase
        run: echo "REPO_LC=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Base Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.base 
          push: true
          tags: ghcr.io/${{ env.REPO_LC }}-base:latest
          cache-from: type=gha,scope=${{ github.workflow }}-base
          cache-to: type=gha,scope=${{ github.workflow }}-base,mode=max

      - name: Start services using Docker Compose
        env:
          GITHUB_REPOSITORY: ${{ env.REPO_LC }} # Use the lowercase variable
          BASE_IMAGE_TAG: latest
        run: docker compose up -d --build

      - name: Wait for services to be healthy
        run: |
          echo "Waiting for web service to be healthy..."
          timeout 30s bash -c 'until curl --fail http://localhost:8000/health; do sleep 1; done'

      - name: Run tests
        id: tests
        run: |
          docker compose exec -T -e APP_BASE_URL="http://localhost:5000" web /bin/bash -c "rm -rf /root/.cache/argos-translate && sh tests/run_tests.sh"
        continue-on-error: true

      - name: Show logs on failure
        if: steps.tests.outcome == 'failure'
        run: docker compose logs

      - name: Stop services
        if: always()
        run: docker compose down

      - name: Verify test results
        if: steps.tests.outcome != 'success'
        run: |
          echo "Tests failed."
          exit 1
