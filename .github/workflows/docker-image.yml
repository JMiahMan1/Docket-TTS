name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/docket-tts
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      # This step builds the base image and tags it locally
      - name: Build Base Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.base
          push: false
          load: true # <-- This makes the image available to subsequent steps
          tags: docket-tts-base:latest
          cache-from: type=gha,scope=${{ github.workflow }}-base
          cache-to: type=gha,scope=${{ github.workflow }}-base,mode=max

      # This step now has access to the GITHUB_REPOSITORY variable
      - name: Start services using Docker Compose
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: docker-compose up -d --build

      - name: Wait for services to be healthy
        run: |
          echo "Waiting for web service to be healthy..."
          timeout 30s bash -c 'until curl --fail http://localhost:8000/health; do sleep 1; done'

      - name: Run tests
        id: tests
        run: |
          docker-compose exec -T web /bin/bash -c "sh run_tests.sh"
        continue-on-error: true

      - name: Show logs on failure
        if: steps.tests.outcome == 'failure'
        run: docker-compose logs

      - name: Stop services
        if: always()
        run: docker-compose down

      - name: Verify test results
        if: steps.tests.outcome != 'success'
        run: |
          echo "Tests failed. Deployment will be skipped."
          exit 1

      - name: Login to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Application Image to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ github.workflow }}-app
